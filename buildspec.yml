version: 0.2

phases:
  install:
    commands:
      - echo Installing Snyk...
      - npm install -g snyk
      - pip install --upgrade awscli
      - aws --version
      - echo Installing OWASP ZAP...
      - docker pull owasp/zap2docker-stable # or use another tag/version as needed
  pre_build:
    commands:
      #- echo Logging in to Amazon EKS...
      #- aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      #- aws eks --region us-east-1 update-kubeconfig --name fcmb-cluster
      #- kubectl config current-context # Verify the current context is correctly set
      #- echo check config 
      #- kubectl config view --minify
      #- echo check kubectl access
      #- kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=$BRANCH}
      - echo $IMAGE_TAG
      - IMAGE_NAME="fcmb-test-repo"
      - CONTAINER_NAME=$IMAGE_NAME
      - REPOSITORY_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME"
      - echo Checking for vulnerabilities in the dependencies...
      - snyk auth $SNYK_TOKEN
      - snyk test
      - snyk test --json > snyk_report.json
  build:
    commands:
      - echo Build started on $(date)
      - echo Building the Docker image...
      - docker build -t $IMAGE_NAME:latest .
      - docker tag $IMAGE_NAME:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_NAME:latest $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on $(date)
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Running OWASP ZAP...
      #- docker run --rm owasp/zap2docker-stable zap-baseline.py -t http://your-staging-env-url/ -r zap_report.html
      - echo "OWASP ZAP scan skipped, no staging URL provided."
      - echo Writing image definitions file...
      - printf '[\n  {\n    "name":"%s",\n    "imageUri":"%s"\n  }\n]\n' "$CONTAINER_NAME" "$REPOSITORY_URI:latest" > imagedefinitions.json
      - echo Uploading OWASP ZAP report to an S3 bucket...
      #- if [ -f zap_report.html ]; then aws s3 cp zap_report.html s3://owasp-report-bucket/zap_report_$IMAGE_TAG.html; else echo "No ZAP report found, skipping upload"; fi
      #- aws s3 cp zap_report.html s3://owasp-report-bucket/zap_report_$IMAGE_TAG.html
      - echo Uploading Snyk report to an S3 bucket...
      - aws s3 cp snyk_report.json s3://my-security-reports/snyk-findings/snyk_report_v1.2.3.json
      - echo Push the latest image to cluster
      - kubectl apply -f deployment.yaml
      - kubectl rollout restart -f deployment.yaml
      - kubectl apply -f service.yaml
      #- kubectl get svc my-app-service



artifacts:
  files:
    - imagedefinitions.json
